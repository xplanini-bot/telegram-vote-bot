import 'dotenv/config';
import { Telegraf, Markup } from "telegraf";

const bot = new Telegraf(process.env.BOT_TOKEN);

const options = ["–ú–µ—Å—Ç—å —Å—É—Ä–∫–∞ –≤ 18:00", "–ú–µ—Å—Ç—å —Å—É—Ä–∫–∞ –≤ 20:00", "–ú–µ—Å—Ç—å —Å—É—Ä–∫–∞ –≤ 22:00"];
let votes = {}; // {user_id: choice}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ReplyKeyboardMarkup
function getKeyboard() {
    return Markup.keyboard(options.map(opt => [opt]))
                 .resize()
                 .oneTime(false);
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(ctx => {
    ctx.reply("üìä –í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ú–µ—Å—Ç—å —Å—É—Ä–∫–∞", getKeyboard());
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
bot.on("text", (ctx) => {
    const text = ctx.message.text;
    const userId = ctx.from.id;
    const chatId = ctx.chat.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    if (!options.includes(text)) return;

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∫–æ–º–∞–Ω–¥—É /vote <choice>
    handleVote(userId, chatId, text, ctx);
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function handleVote(userId, chatId, choice, ctx) {
    votes[userId] = choice;

    // –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤
    const counts = {};
    options.forEach(opt => counts[opt] = 0);
    Object.values(votes).forEach(v => counts[v]++);

    // –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —á–∞—Ç
    let resultText = "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\n";
    options.forEach(opt => resultText += `${opt} : ${counts[opt]} –≥–æ–ª–æ—Å–æ–≤\n`);

    ctx.reply(resultText, Markup.removeKeyboard()); //—É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

    setTimeout(() => {
    ctx.reply(" ", getKeyboard()); // —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏, –ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
}, 60000);

}

bot.launch();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
