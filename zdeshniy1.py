from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio

import os
TOKEN = os.getenv("BOT_TOKEN")  # —á–∏—Ç–∞–µ—Ç —Ç–æ–∫–µ–Ω –∏–∑ Environment
bot = Bot(token=TOKEN)

bot = Bot(token=TOKEN)
dp = Dispatcher()

votes = {}  # {user_id: choice}
options = ["23:00", "19:00"]

@dp.message(Command("start"))
async def start_poll(message: types.Message):
    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[[types.KeyboardButton(text=opt)] for opt in options],
        resize_keyboard=True,
        one_time_keyboard=False
    )

    await message.answer(
        "üìä –ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≤–µ–Ω—Ç–µ –¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –ª–µ—Å?\n(–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é)",
        reply_markup=keyboard
    )

@dp.message()
async def handle_vote(message: types.Message):
    choice = message.text
    user_id = message.from_user.id

    if choice not in options:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥–æ–ª–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    votes[user_id] = choice

    # –ü–æ–¥—Å—á—ë—Ç –≥–æ–ª–æ—Å–æ–≤
    counts = {opt: 0 for opt in options}
    for c in votes.values():
        counts[c] += 1

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º
    await message.answer(f"–¢—ã –≤—ã–±—Ä–∞–ª: {choice}")

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—â–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    result_text = "üìä –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\n"
    for opt in options:
        result_text += f"{opt}: {counts[opt]} –≥–æ–ª–æ—Å–æ–≤\n"

    await message.answer(result_text)

async def main():
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
