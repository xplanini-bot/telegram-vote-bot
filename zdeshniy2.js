import 'dotenv/config';
import { Telegraf, Markup } from "telegraf";

const bot = new Telegraf(process.env.BOT_TOKEN);

const options = ["23:00", "19:00"];
let votes = {}; // {user_id: choice}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ReplyKeyboardMarkup
function getKeyboard() {
    return Markup.keyboard(options.map(opt => [opt]))
                 .resize()
                 .oneTime(false);
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command("start", (ctx) => {
    ctx.reply(
        "üìä –ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∏–≤–µ–Ω—Ç–µ –¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π –ª–µ—Å?\n(–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)",
        getKeyboard()
    );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
bot.on("text", (ctx) => {
    const text = ctx.message.text;
    const userId = ctx.from.id;
    const chatId = ctx.chat.id;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    if (!options.includes(text)) return;

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∫–æ–º–∞–Ω–¥—É /vote <choice>
    handleVote(userId, chatId, text, ctx);
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function handleVote(userId, chatId, choice, ctx) {
    votes[userId] = choice;

    // –ü–æ–¥—Å—á–µ—Ç –≥–æ–ª–æ—Å–æ–≤
    const counts = {};
    options.forEach(opt => counts[opt] = 0);
    Object.values(votes).forEach(v => counts[v]++);

    // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    ctx.reply(`–¢—ã –≤—ã–±—Ä–∞–ª: ${choice}`);

    // –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —á–∞—Ç
    let resultText = "üìä –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:\n";
    options.forEach(opt => resultText += `${opt}: ${counts[opt]} –≥–æ–ª–æ—Å–æ–≤\n`);

    ctx.reply(resultText);
}

bot.launch();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
